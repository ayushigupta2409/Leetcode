#longerCode_sameApproach
class Solution:
    def minMaxGame(self, nums: List[int]) -> int:
        if len(nums)==1:
            return nums[0]
        else:
            newNums=list()
            for i in range(len(nums)//2):
                if i%2==0:
                    newNums.append(min(nums[2 * i], nums[2 * i + 1]))
                else:
                    newNums.append(max(nums[2 * i], nums[2 * i + 1]))
            nums=newNums
            return self.minMaxGame(nums)

#shorterCode_sameApproach
class Solution:
    def minMaxGame(self, nums: List[int]) -> int:
        return nums[0] if len(nums) == 1 else self.minMaxGame([max(nums[2 * i], nums[2 * i + 1]) if i & 1 else min(nums[2 * i], nums[2 * i + 1]) for i in range(len(nums)//2)])
